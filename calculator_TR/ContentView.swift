import SwiftUI

struct ContentView: View {
    @State private var items_food = [
        OrderItem(name: "Êúà", price: 12540),
        OrderItem(name: "ÈôΩ", price: 9900),
        OrderItem(name: "È¢®", price: 8580),
        OrderItem(name: "Á©∫", price: 6600),
        OrderItem(name: "„ÇÜ„Çä", price: 2640),
        OrderItem(name: "„ÇÇ„ÇÇ", price: 1980),
        OrderItem(name: "‰æõÈ§äËÜ≥", price: 3300),
    ]
    
    @State private var items_drink = [
        OrderItem(name: "„Éì„Éº„É´", price: 730),
        OrderItem(name: "Êó•Êú¨ÈÖí", price: 470),
        OrderItem(name: "„Éé„É≥„Ç¢„É´„Ç≥„Éº„É´„Éì„Éº„É´", price: 510),
        OrderItem(name: "„Ç¶„Éº„É≠„É≥Ëå∂", price: 270),
        OrderItem(name: "„Ç™„É¨„É≥„Ç∏„Ç∏„É•„Éº„Çπ", price: 270),
        OrderItem(name: "„Ç≥„Éº„É©", price: 270),
        OrderItem(name: "„Ç∏„É≥„Ç∏„É£„Éº„Ç®„Éº„É´", price: 270),
        OrderItem(name: "ÁôΩÊ°É„Ç∏„É•„Éº„Çπ", price: 530),
        OrderItem(name: "‰∏â„É∂Êó•„Ç∏„É•„Éº„Çπ", price: 530),
        OrderItem(name: "„Éü„Éç„É©„É´„Ç¶„Ç©„Éº„Çø„Éº", price: 200),
    ]

    var totalAmountFood: Int {
        items_food.reduce(0) { $0 + $1.totalPrice }
    }

    var totalAmountDrink: Int {
        items_drink.reduce(0) { $0 + $1.totalPrice }
    }

    var totalAmount: Int {
        totalAmountFood + totalAmountDrink
    }

    var selectedItems: [OrderItem] {
        (items_food + items_drink).filter { $0.quantity > 0 }
    }

    var body: some View {
        NavigationView {
            VStack {
                List {
                    Section(header: Text("ÊñôÁêÜ")) {
                        ForEach($items_food) { $item in
                            HStack {
                                VStack(alignment: .leading) {
                                    Text(item.name)
                                        .fontWeight(.semibold)
                                    Text("[\(item.price)ÂÜÜ]")
                                }
                                Spacer()
                                Picker("", selection: $item.quantity) {
                                    ForEach(0..<51) { i in
                                        Text("\(i)").tag(i)
                                    }
                                }
                                .pickerStyle(MenuPickerStyle())
                                .frame(width: 60)
                                Text("\(item.totalPrice)ÂÜÜ")
                                    .frame(width: 100, alignment: .trailing)
                            }
                            .background(item.quantity > 0 ? Color.yellow.opacity(0.2) : Color.clear)
                        }
                    }
                    
                    Section(header: Text("„Éâ„É™„É≥„ÇØ")) {
                        ForEach($items_drink) { $item in
                            HStack {
                                VStack(alignment: .leading) {
                                    Text(item.name)
                                        .fontWeight(.semibold)
                                    Text("[\(item.price)ÂÜÜ]")
                                }
                                Spacer()
                                Picker("", selection: $item.quantity) {
                                    ForEach(0..<51) { i in
                                        Text("\(i)").tag(i)
                                    }
                                }
                                .pickerStyle(MenuPickerStyle())
                                .frame(width: 60)
                                Text("\(item.totalPrice)ÂÜÜ")
                                    .frame(width: 100, alignment: .trailing)
                            }
                            .background(item.quantity > 0 ? Color.yellow.opacity(0.2) : Color.clear)
                        }
                    }
                }
                
                VStack {
                    HStack {
                        Text("ÊñôÁêÜÂêàË®à :")
                        Spacer()
                        Text("\(totalAmountFood)ÂÜÜ")
                    }
                    .frame(maxHeight: 10)
                    .padding()
                    .font(.title3)
                    
                    HStack {
                        Text("„Éâ„É™„É≥„ÇØÂêàË®à :")
                        Spacer()
                        Text("\(totalAmountDrink)ÂÜÜ")
                    }
                    .frame(maxHeight: 10)
                    .padding()
                    .font(.title3)
                    
                    HStack {
                        Text("ÂêàË®àÈáëÈ°ç :")
                        Spacer()
                        Text("\(totalAmount)ÂÜÜ")
                    }
                    .fontWeight(.semibold)
                    .frame(maxHeight: 10)
                    .padding()
                    .font(.title)
                }
                
                HStack {
                    Button(action: clearAll) {
                        Text("Clear")
                            .fontWeight(.bold)
                            .foregroundColor(.white)
                            .padding()
                            .frame(maxWidth: 200)
                            .frame(maxHeight: 45)
                            .background(Color.red)
                            .clipShape(RoundedRectangle(cornerRadius: 50))
                    }
                    
                    NavigationLink(destination: SelectedItemsView(items: selectedItems)) {
                        Text("Selected Items")
                            .fontWeight(.bold)
                            .foregroundColor(.white)
                            .padding()
                            .frame(maxWidth: 200)
                            .frame(maxHeight: 45)
                            .background(Color.blue)
                            .clipShape(RoundedRectangle(cornerRadius: 50))
                    }
                }
            }
            .navigationTitle("TRVoucher v3 üõ∏")
        }
    }
    
    private func clearAll() {
        for i in items_food.indices {
            items_food[i].quantity = 0
        }
        for i in items_drink.indices {
            items_drink[i].quantity = 0
        }
    }
}

struct SelectedItemsView: View {
    var items: [OrderItem]
    
    var body: some View {
        List {
            Section(header: Text("ÈÅ∏Êäû„Åï„Çå„ÅüÊñôÁêÜ")) {
                ForEach(items.filter { $0.name.contains("‰æõÈ§äËÜ≥") || $0.name.contains("„ÇÇ„ÇÇ") || $0.name.contains("„ÇÜ„Çä") || $0.name.contains("Á©∫") || $0.name.contains("È¢®") || $0.name.contains("ÈôΩ") || $0.name.contains("Êúà") }) { item in
                    HStack {
                        Text(item.name)
                        Spacer()
                        Text("\(item.quantity) x \(item.price)ÂÜÜ = \(item.totalPrice)ÂÜÜ")
                    }
                }
            }
            
            Section(header: Text("ÈÅ∏Êäû„Åï„Çå„Åü„Éâ„É™„É≥„ÇØ")) {
                ForEach(items.filter { !$0.name.contains("‰æõÈ§äËÜ≥") && !$0.name.contains("„ÇÇ„ÇÇ") && !$0.name.contains("„ÇÜ„Çä") && !$0.name.contains("Á©∫") && !$0.name.contains("È¢®") && !$0.name.contains("ÈôΩ") && !$0.name.contains("Êúà") }) { item in
                    HStack {
                        Text(item.name)
                        Spacer()
                        Text("\(item.quantity) x \(item.price)ÂÜÜ = \(item.totalPrice)ÂÜÜ")
                    }
                }
            }
        }
        .navigationTitle("Selected Items‚úÖ")
    }
}

struct OrderItem: Identifiable {
    let id = UUID()
    let name: String
    let price: Int
    var quantity: Int = 0

    var totalPrice: Int {
        return price * quantity
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

